
version: "3.6"
services:
    rabbitmq:
        container_name: rabbitmq-for-microservices
        ports:
            - 5672:5672
            - 15672:15672
        environment:
            - RABBITMQ_DEFAULT_USER=MicroservicesDemoUser
            - RABBITMQ_DEFAULT_PASS=MicroservicesDemoPassword        
        image: rabbitmq:3.10.7-management
                
    customerapi:
        container_name: customerapi
        ports:
            - 8000:80
            - 8001:443
        environment:
            - "ASPNETCORE_URLS=https://+;http://+"
            - "ASPNETCORE_ENVIRONMENT=Development"
            - Kestrel__Certificates__Default__Path=/app/Infrastructure/Certificate/cert.pfx
            - Kestrel__Certificates__Default__Password=DevPass
        volumes:
            - 'D:\study\MyMicroservices\:/app/Infrastructure/Certificate'    
        build:
            context: ./CustomerApi
            dockerfile: CustomerApi/Dockerfile.Build
        restart: on-failure        
        depends_on:
            - rabbitmq
        
    orderapi:
        container_name: orderapi
        ports:
            - 9000:80
            - 9001:443
        environment:
            - "ASPNETCORE_URLS=https://+;http://+"
            - "ASPNETCORE_ENVIRONMENT=Development"
            - Kestrel__Certificates__Default__Path=/app/Infrastructure/Certificate/cert.pfx
            - Kestrel__Certificates__Default__Password=DevPass
        volumes:
            - 'D:\study\MyMicroservices\:/app/Infrastructure/Certificate' 
        build:
            context: ./OrderApi      
            dockerfile: OrderApi/Dockerfile.Build
        restart: on-failure
        depends_on:
            - rabbitmq